# 1. Создать список и заполнить его элементами различных типов данных.
#    Реализовать скрипт проверки типа данных каждого элемента.
#    Использовать функцию type() для проверки типа.
#    Элементы списка можно не запрашивать у пользователя, а указать явно, в программе.

print('Задание 1, Вариант 1')
result_list1 = ['Строчечка', 12, 12.2, None, True]
i=0
while i<len(result_list1):
    print(type(result_list1[i]))
    i+=1

print('Задание 1, Вариант 2')
print([type(i) for i in result_list1])

# 2. Для списка реализовать обмен значений соседних элементов.
#    Значениями обмениваются элементы с индексами 0 и 1, 2 и 3 и т. д.
#    При нечётном количестве элементов последний сохранить на своём месте.
#    Для заполнения списка элементов нужно использовать функцию input().

print('Задание 2')
my_list = [1,2,3,4,5]
my_list = input("Введите элементы списка: ").split()
print(my_list)
for i in range(0, len(my_list)-1, 2):
    my_list[i], my_list[i+1] = my_list[i+1], my_list[i]
print(my_list)

# 3. Пользователь вводит месяц в виде целого числа от 1 до 12.
#    Сообщить, к какому времени года относится месяц (зима, весна, лето, осень).
#    Напишите решения через list и dict.

print('Задание 3, Вариант 1 (список)')
lseasons = ['Зима', 'Весна', 'Лето', 'Осень']
month = int(input("Введите месяц по номеру "))
if month ==12 or month == 1 or month == 2:
        print(seasons_list[0])
elif month == 3 or month == 4 or month ==5:
    print(lseasons[1])
elif month == 6 or month == 7 or month == 8:
    print(lseasons[2])
elif month == 9 or month == 10 or month == 11:
    print(lseasons[3])
else:
    print("Такого месяца не существует")

print('Задание 3, Вариант 2 (словарь)')

dseasons = {1 : 'Зима', 2 : 'Весна', 3 : 'Лето', 4 : 'Осень'}
month = int(input("Введите месяц по номеру "))
if month ==12 or month == 1 or month == 2:
        print(dseasons.get(1))
elif month == 3 or month == 4 or month ==5:
    print(dseasons.get(2))
elif month == 6 or month == 7 or month == 8:
    print(dseasons.get(3))
elif month == 9 or month == 10 or month == 11:
    print(dseasons.get(4))
else:
    print("Такого месяца не существует")
# 4. Пользователь вводит строку из нескольких слов, разделённых пробелами.
#    Вывести каждое слово с новой строки. Строки нужно пронумеровать.
#    Если слово длинное, выводить только первые 10 букв в слове.

# 5. Реализовать структуру «Рейтинг», представляющую собой набор натуральных чисел, который не возрастает.
#    У пользователя нужно запрашивать новый элемент рейтинга.
#    Если в рейтинге существуют элементы с одинаковыми значениями, то новый элемент с тем же значением должен разместиться после них.
#       Подсказка. Например, набор натуральных чисел: 7, 5, 3, 3, 2.
#       Пользователь ввёл число 3. Результат: 7, 5, 3, 3, 3, 2.
#       Пользователь ввёл число 8. Результат: 8, 7, 5, 3, 3, 2.
#       Пользователь ввёл число 1. Результат: 7, 5, 3, 3, 2, 1.
#       Набор натуральных чисел можно задать сразу в коде, например, my_list = [7, 5, 3, 3, 2].
#
# 6. * Реализовать структуру данных «Товары». Она должна представлять собой список кортежей.
#      Каждый кортеж хранит информацию об отдельном товаре.
#      В кортеже должно быть два элемента — номер товара и словарь с параметрами, то есть характеристиками товара: название, цена, количество, единица измерения.
#      Структуру нужно сформировать программно, запросив все данные у пользователя.
#           Пример готовой структуры:
#
#               [
#               (1, {“название”: “компьютер”, “цена”: 20000, “количество”: 5, “eд”: “шт.”}),
#               (2, {“название”: “принтер”, “цена”: 6000, “количество”: 2, “eд”: “шт.”}),
#               (3, {“название”: “сканер”, “цена”: 2000, “количество”: 7, “eд”: “шт.”})
#               ]
#
#           Нужно собрать аналитику о товарах. Реализовать словарь, в котором каждый ключ — характеристика товара, например, название. Тогда значение — список значений-характеристик, например, список названий товаров.
#               Пример:
#
#               {
#               “название”: [“компьютер”, “принтер”, “сканер”],
#               “цена”: [20000, 6000, 2000],
#               “количество”: [5, 2, 7],
#               “ед”: [“шт.”]
#               }